apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: api-tests-task
spec:
  params:
    -name: TEST_PASSWORD
  stepTemplate:
    envFrom:
      # - configMapRef:
      #     name: common-config
      # - secretRef:
      #     name: common-secret
      - configMapRef:
          name: api-tests-config
      # - secretRef:
      #     name: api-tests-secret
    env:
      ##################### Classic Pipeline workaround start ###################################
      - name: HOME
        value: "/root"
      ##################### Classic Pipeline workaround end #####################################
  steps:
    - name: api-tests
      image: ibmcom/pipeline-base-image:2.6
      env:
        -name: TEST_PASSWORD
        -value: $(inputs.params.api_tests_TEST_PASSWORD}
      command: ["/bin/bash", "-c"]
      args:
        - |
          #!/usr/bin/env bash
          stepName=api-tests      
          ##################### Classic Pipeline workaround start ###################################
          export HOME="/root" # workaround for https://github.com/tektoncd/pipeline/issues/1836
          ##################### Classic Pipeline workaround end #####################################
          TARGET=$( echo "$TARGET" | tr '[:upper:]' '[:lower:]')
          if [ "$TARGET" == "dal" ]; then TARGET="yp"; fi
          git clone --depth 1 https://$TEST_USERID:$TEST_PASSWORD@github.ibm.com/org-ids/private-worker-service
          export LANG=en_US.UTF-8
          # otc-system-test/scripts/systemTests.sh -c deployment -p $TEST_PASSWORD -t $SLACK_TOKEN -a $SAUCE_ACCESS -s $SLACK_API_TOKEN $TARGET
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: api-tests-config
data:
  TARGET: ys1-dev
  TEST_USERID: zchen
  TEST_USERPW: JhubPa88_0122

# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: api-tests-secret
# type: Opaque
# stringData:
#   TEST_PASSWORD: $(params.api_tests_TEST_PASSWORD)
#   SLACK_TOKEN: $(params.api_tests_SLACK_TOKEN)
#   SAUCE_ACCESS: $(params.api_tests_SAUCE_ACCESS)
#   SLACK_API_TOKEN: $(params.api_tests_SLACK_API_TOKEN)