apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: api-tests-task
spec:
  params:
    - name: target_repo
    - name: test_password
  steps:
    - name: show-props
      image: node:12.16.1
      env:
        - name: TARGET_REPO
          value: $(inputs.params.target_repo)
        - name: TEST_PASSWORD
          value: $(inputs.params.test_password)
      command: ["/bin/bash", "-c"]
      args:
        - |
          echo $TEST_PASSWORD
          echo $TARGET_REPO
          git clone --depth 1 https://zchen:ec5d88cb6743f80a5cceace3d70690cddb9b7887@$TARGET_REPO
          cd private-worker-service
          echo "start running"
          npm install --only=dev
          npm test
          export LANG=en_US.UTF-8
          # otc-system-test/scripts/systemTests.sh -c deployment -p $TEST_PASSWORD -t $SLACK_TOKEN -a $SAUCE_ACCESS -s $SLACK_API_TOKEN $TARGET
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: api-tests-config
data:
  TARGET: ys1-dev
  TEST_USERID: zchen
  TEST_USERPW: JhubPa88_0122

# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: api-tests-secret
# type: Opaque
# stringData:
#   TEST_PASSWORD: $(params.api_tests_TEST_PASSWORD)
#   SLACK_TOKEN: $(params.api_tests_SLACK_TOKEN)
#   SAUCE_ACCESS: $(params.api_tests_SAUCE_ACCESS)
#   SLACK_API_TOKEN: $(params.api_tests_SLACK_API_TOKEN)

  #!/usr/bin/env bash
          # stepName=api-tests      
          # ##################### Classic Pipeline workaround start ###################################
          # export HOME="/root" # workaround for https://github.com/tektoncd/pipeline/issues/1836
          # ##################### Classic Pipeline workaround end #####################################
          # TARGET=$( echo "$TARGET" | tr '[:upper:]' '[:lower:]')
          # echo $TEST_PASSWORD
          # echo $TARGET_REPO
          # if [ "$TARGET" == "dal" ]; then TARGET="yp"; fi
          # git clone --depth 1 https://$TEST_USERID:ec5d88cb6743f80a5cceace3d70690cddb9b7887@github.ibm.com/org-ids/private-worker-service
          # cd private-worker-service
          # echo "start running"
          # npm install
          # npm test
          # export LANG=en_US.UTF-8
          # # otc-system-test/scripts/systemTests.sh -c deployment -p $TEST_PASSWORD -t $SLACK_TOKEN -a $SAUCE_ACCESS -s $SLACK_API_TOKEN $TARGET